(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{367:function(a,e,s){"use strict";s.r(e);var t=s(44),r=Object(t.a)({},(function(){var a=this,e=a.$createElement,s=a._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"usage"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#usage"}},[a._v("#")]),a._v(" Usage")]),a._v(" "),s("h2",{attrs:{id:"main-process"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#main-process"}},[a._v("#")]),a._v(" Main process")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ torch test/main\n")])])]),s("h2",{attrs:{id:"renderer-process"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#renderer-process"}},[a._v("#")]),a._v(" Renderer process")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ torch --renderer test/renderer\n")])])]),s("h2",{attrs:{id:"interactive-mode"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#interactive-mode"}},[a._v("#")]),a._v(" Interactive mode")]),a._v(" "),s("p",[a._v("you can re-run tests by CMD+R")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ torch --interative test/renderer\n")])])]),s("blockquote",[s("p",[a._v("watching source files")])]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ torch --interactive --watch test/renderer\n")])])]),s("h2",{attrs:{id:"view-code-coverage"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#view-code-coverage"}},[a._v("#")]),a._v(" View code coverage")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ torch --coverage test/main "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("&&")]),a._v(" torch-coverage\n")])])]),s("h2",{attrs:{id:"overalls"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#overalls"}},[a._v("#")]),a._v(" + Overalls")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ torch --coverage test/main "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("&&")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("cat")]),a._v(" ./coverage/lcov.info "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" ./node_modules/coveralls/bin/coveralls.js "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("&&")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("rm")]),a._v(" -rf ./coverage\n")])])]),s("h2",{attrs:{id:"specify-source-files"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#specify-source-files"}},[a._v("#")]),a._v(" specify source files")]),a._v(" "),s("p",[a._v("for watching / code coverage")]),a._v(" "),s("blockquote",[s("p",[a._v("interactive mode")])]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ torch --interactive --watch --source-pattern src/**/*.js test/renderer\n")])])]),s("blockquote",[s("p",[a._v("code coverage")])]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ torch --coverage --source-pattern src/**/*.js test/main "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("&&")]),a._v(" torch-coverage\n")])])])])}),[],!1,null,null,null);e.default=r.exports}}]);